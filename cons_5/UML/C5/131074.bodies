class GetReal
!!!136066.cpp!!!	execute(inout params : XmlRpcValue, inout result : XmlRpcValue) : void

    if (params.size() == 1){    // User id only without boundares.
        if(this->engine.userValidate(params[0])){
            result = this->engine.getReal(); // Uses most recent real number boundaries.
        }
        else{
            result = false;     // Not valid user.
        }
    }
    else if(params.size() == 3){// Id and boundaries.
        if(this->engine.userValidate(params[0])){
            result = this->engine.getReal(params[1], params[2]);
        }
        else{
            result = false;     // Not valid user.
        }
    }
    else{
        throw C5ServerException(C5ServerException::exceptionCodes::INV_SYN);
    }
!!!136194.cpp!!!	help() : std::string

    std::stringstream ayuda;
    ayuda << "Descripcion: genera un numero real aleatorio en un rango especificado.\n"
          << "Parametros: "
          << "{bmin(double) - limite inferior,"
          << " bmax(double) - limite superior}.\n"
          << "Returns:"
          << "{resultado(double)}.\n"
          << "Nota: si no se indica un rango se asume el de la ultima peticion.";
    return ayuda.str();
